openapi: "3.0.0"
info:
  version: 1.0.0
  title: "spica rest times component"
  description: "Rest API for the user component of spica communication server"
servers:
  - url: http://localhost/api
security:
  - BasicAuth

paths:
  /skill/create:
    post:
      tags:
        - user
      operationId: "createSkill"
      description: "creates a new skill"
      parameters:
        - name: name
          in: query
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'skill'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkillInfo"
  /skill/list:
    get:
      tags:
        - user
      operationId: "getSkills"
      description: "get all skills"
      responses:
        '200':
          description: 'skills'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SkillInfo"

  /user/skills:
    get:
      tags:
        - user
      operationId: "getUserSkills"
      description: "gets all skills of user"
      parameters:
      - name: userId
        in: query
        schema:
          type: string
        required: true
      responses:
        '200':
          description: 'skill'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SkillInfo"

  /user/skills/set:
    post:
      consumes:
        - application/json
      tags:
        - user
      operationId: "setUserSkills"
      description: "sets the skills of the user"
      parameters:
        - name: userId
          in: query
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/SkillInfo"

      responses:
        '200':
          description: 'Null response'


  /user/refresh:
    get:
      tags:
        - user
      operationId: "refreshUsers"
      description: "refreshes all users from external systems"
      responses:
        '200':
          description: 'Null response'

  /user/byUsername:
    get:
      tags:
        - user
      operationId: "findUser"
      description: "find user by username"
      parameters:
        - name: username
          in: query
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'users'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"

  /user/list:
    get:
      tags:
        - user
      operationId: "getUsers"
      description: "get all users"
      responses:
        '200':
          description: 'users'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserInfo"




components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    UserInfo:
      type: "object"
      properties:
        name:
          type: "string"
        firstname:
          type: "string"
        email:
          type: "string"
        displayname:
          type: "string"
        username:
          type: "string"
        password:
          type: "string"
        phone:
          type: "string"
        id:
          type: "string"
        avatar:
          type: "string"

    SkillInfo:
       type: "object"
       properties:
         name:
           type: "string"
         id:
           type: "integer"
